package tree

import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.DisplayName
import org.junit.jupiter.api.Test

class BinaryTreeNodeTest {

    @Test
    @DisplayName("Test for adding elements to binary tree 01")
    fun addTest01() {
        val bt = BinaryTreeNode(50, null)
        assertThat(bt.toListString()).isEqualTo("=50")
        bt.add(45)
        assertThat(bt.toListString()).isEqualTo("l=45 =50")
        bt.add(51)
        assertThat(bt.toListString()).isEqualTo("l=45 =50 r=51")
        bt.add(20)
        assertThat(bt.toListString()).isEqualTo("ll=20 l=45 =50 r=51")
        bt.add(30)
        assertThat(bt.toListString()).isEqualTo("ll=20 llr=30 l=45 =50 r=51")
        bt.add(30)
        assertThat(bt.toListString()).isEqualTo("ll=20 llr=30 l=45 =50 r=51")
        bt.add(30)
        assertThat(bt.toListString()).isEqualTo("ll=20 llr=30 l=45 =50 r=51")
        bt.add(47)
        assertThat(bt.toListString()).isEqualTo("ll=20 llr=30 l=45 lr=47 =50 r=51")
        bt.add(70)
        assertThat(bt.toListString()).isEqualTo("ll=20 llr=30 l=45 lr=47 =50 r=51 rr=70")
        bt.add(60)
        assertThat(bt.toListString()).isEqualTo("ll=20 llr=30 l=45 lr=47 =50 r=51 rrl=60 rr=70")
    }

    @Test
    @DisplayName("Test for removing elements from binary tree 01")
    fun removeTest01() {
        val bt = BinaryTreeNode(50, null)
        bt.add(45)
        bt.add(51)
        bt.add(20)
        bt.add(30)
        assertThat(bt.toListString()).isEqualTo("ll=20 llr=30 l=45 =50 r=51")
        bt.remove(50)
        assertThat(bt.toListString()).isEqualTo("ll=20 l=30 =45 r=51")
        bt.remove(30)
        assertThat(bt.toListString()).isEqualTo("l=20 =45 r=51")
        bt.remove(51)
        assertThat(bt.toListString()).isEqualTo("l=20 =45")
        bt.remove(51)
        assertThat(bt.toListString()).isEqualTo("l=20 =45")
        bt.remove(45)
        assertThat(bt.toListString()).isEqualTo("=20")
        bt.remove(20)
        assertThat(bt.toListString()).isEqualTo("=null")
    }

    @Test
    @DisplayName("Test for removing elements from binary tree 02 - only removing from top")
    fun removeTest02() {
        val bt = BinaryTreeNode(50, null)
        bt.add(45)
        bt.add(51)
        bt.add(20)
        bt.add(30)
        bt.add(47)
        bt.add(70)
        bt.add(60)
        bt.add(25)
        bt.add(35)
        bt.add(28)
        bt.add(37)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llrlr=28 llr=30 llrr=35 llrrr=37 l=45 lr=47 =50 r=51 rrl=60 rr=70")
        bt.remove(50)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llrlr=28 llr=30 llrr=35 llrrr=37 l=45 =47 r=51 rrl=60 rr=70")
        bt.remove(47)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llrlr=28 llr=30 llrr=35 l=37 =45 r=51 rrl=60 rr=70")
        bt.remove(45)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llrlr=28 llr=30 l=35 =37 r=51 rrl=60 rr=70")
        bt.remove(37)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llr=28 l=30 =35 r=51 rrl=60 rr=70")
        bt.remove(35)
        assertThat(bt.toListString()).isEqualTo("ll=20 llr=25 l=28 =30 r=51 rrl=60 rr=70")
        bt.remove(30)
        assertThat(bt.toListString()).isEqualTo("ll=20 l=25 =28 r=51 rrl=60 rr=70")
        bt.remove(28)
        assertThat(bt.toListString()).isEqualTo("l=20 =25 r=51 rrl=60 rr=70")
        bt.remove(25)
        assertThat(bt.toListString()).isEqualTo("=20 r=51 rrl=60 rr=70")
        bt.remove(20)
        assertThat(bt.toListString()).isEqualTo("=51 r=60 rr=70")
        bt.remove(51)
        assertThat(bt.toListString()).isEqualTo("=60 r=70")
        bt.remove(60)
        assertThat(bt.toListString()).isEqualTo("=70")
    }

    @Test
    @DisplayName("Test for removing elements from binary tree 03 - only removing from middle")
    fun removeTest03() {
        val bt = BinaryTreeNode(50, null)
        bt.add(45)
        bt.add(51)
        bt.add(20)
        bt.add(30)
        bt.add(47)
        bt.add(70)
        bt.add(60)
        bt.add(25)
        bt.add(35)
        bt.add(28)
        bt.add(37)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llrlr=28 llr=30 llrr=35 llrrr=37 l=45 lr=47 =50 r=51 rrl=60 rr=70")
        bt.remove(45)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llrlr=28 llr=30 llrr=35 l=37 lr=47 =50 r=51 rrl=60 rr=70")
        bt.remove(30)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llr=28 llrr=35 l=37 lr=47 =50 r=51 rrl=60 rr=70")
        bt.remove(51)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llr=28 llrr=35 l=37 lr=47 =50 r=60 rr=70")
        bt.remove(60)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llr=28 llrr=35 l=37 lr=47 =50 r=70")
        bt.remove(37)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llr=28 l=35 lr=47 =50 r=70")
        bt.remove(35)
        assertThat(bt.toListString()).isEqualTo("ll=20 llr=25 l=28 lr=47 =50 r=70")
        bt.remove(20)
        assertThat(bt.toListString()).isEqualTo("ll=25 l=28 lr=47 =50 r=70")
        bt.remove(28)
        assertThat(bt.toListString()).isEqualTo("l=25 lr=47 =50 r=70")
        bt.remove(25)
        assertThat(bt.toListString()).isEqualTo("l=47 =50 r=70")
        bt.remove(47)
        assertThat(bt.toListString()).isEqualTo("=50 r=70")
        bt.remove(70)
        assertThat(bt.toListString()).isEqualTo("=50")
    }

    @Test
    @DisplayName("Test for removing elements from binary tree 04 - removing and adding")
    fun removeTest04() {
        val bt = BinaryTreeNode(50, null)
        bt.add(45)
        bt.add(51)
        bt.add(20)
        bt.add(30)
        bt.add(47)
        bt.add(70)
        bt.add(60)
        bt.add(25)
        bt.add(35)
        bt.add(28)
        bt.add(37)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llrlr=28 llr=30 llrr=35 llrrr=37 l=45 lr=47 =50 r=51 rrl=60 rr=70")
        bt.remove(45)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llrlr=28 llr=30 llrr=35 l=37 lr=47 =50 r=51 rrl=60 rr=70")
        bt.add(45)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llrlr=28 llr=30 llrr=35 l=37 lrl=45 lr=47 =50 r=51 rrl=60 rr=70")
        bt.remove(51)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llrlr=28 llr=30 llrr=35 l=37 lrl=45 lr=47 =50 r=60 rr=70")
        bt.add(51)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llrlr=28 llr=30 llrr=35 l=37 lrl=45 lr=47 =50 rl=51 r=60 rr=70")
        bt.remove(50)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llrlr=28 llr=30 llrr=35 l=37 lr=45 =47 rl=51 r=60 rr=70")
        bt.add(50)
        assertThat(bt.toListString()).isEqualTo("ll=20 llrl=25 llrlr=28 llr=30 llrr=35 l=37 lr=45 =47 rll=50 rl=51 r=60 rr=70")
    }

}
